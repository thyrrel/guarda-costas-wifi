name: Guarda-Costas WIFI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      ANDROID_HOME: /usr/local/lib/android/sdk
      PATH: $PATH:/usr/local/lib/android/sdk/platform-tools

    steps:
      # 1. Instalar tar para evitar erro no checkout
      - name: Instalar tar
        run: sudo apt-get update && sudo apt-get install -y tar

      # 2. Clonar o repositório
      - name: Clonar repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # pega apenas o commit mais recente para ser mais rápido

      # 3. Configurar Java
      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 4. Configurar Flutter
      - name: Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: 'stable'
          cache: true

      # 5. Cache do Pub
      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      # 6. Cache do Gradle
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      # 7. Restaurar Keystore
      - name: Restaurar Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore

      # 8. Criar key.properties
      - name: Criar key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=release.keystore" >> android/key.properties

      # 9. Instalar dependências
      - name: Instalar dependências
        run: flutter pub get

      # 10. Analisar código (opcional, pode remover para ganhar tempo)
      - name: Analisar código
        run: flutter analyze

      # 11. Build AAB otimizado
      - name: Compilar AAB release
        run: flutter build appbundle --release --no-shrink --split-debug-info=build/debug-info

      # 12. Gerar APK a partir do mesmo código (sem recompilar tudo)
      - name: Compilar APK release
        run: flutter build apk --release --no-shrink --split-debug-info=build/debug-info

      # 13. Upload dos artefatos
      - name: Upload AAB release
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Upload APK release
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
