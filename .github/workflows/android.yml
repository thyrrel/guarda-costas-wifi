# Nome do fluxo de trabalho que aparecerá na aba "Actions" do seu repositório no GitHub.
name: Build e Teste do App Android

# Define os gatilhos que iniciarão este fluxo de trabalho.
on:
  # Executa sempre que um novo commit é enviado (push) para o branch 'main'.
  push:
    branches: [ "main" ]
  # Executa sempre que uma Pull Request é aberta ou atualizada para o branch 'main'.
  pull_request:
    branches: [ "main" ]
  # Permite que você execute este fluxo de trabalho manualmente a partir da interface do GitHub.
  workflow_dispatch:

# Define os trabalhos (jobs) que serão executados.
jobs:
  # O nome do nosso primeiro e único trabalho. Você pode ter vários (ex: um para Android, outro para iOS).
  build:
    # O tipo de máquina virtual que será usada para executar o trabalho. 'ubuntu-latest' é o padrão e recomendado.
    runs-on: ubuntu-latest

    # A sequência de passos que compõem o trabalho.
    steps:
      # Passo 1: Clona o seu repositório para a máquina virtual.
      # 'actions/checkout@v4' é uma ação pré-construída pelo GitHub para fazer isso.
      - name: 1. Clonar o repositório
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Java (JDK).
      # O Flutter depende do Java para compilar aplicativos Android.
      # 'actions/setup-java@v4' é a ação oficial para isso.
      - name: 2. Configurar o ambiente Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Uma distribuição popular e de código aberto do OpenJDK.
          java-version: '17'     # Versão do Java recomendada para as versões mais recentes do Android.

      # Passo 3: Configura o ambiente Flutter.
      # 'subosito/flutter-action@v2' é a ação da comunidade mais popular para instalar o Flutter.
      - name: 3. Configurar o ambiente Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5' # Especifique a versão do Flutter que você usa para garantir consistência.
          channel: 'stable'         # Usa o canal estável do Flutter.
          cache: true               # Ativa o cache para acelerar futuras execuções.

      # Passo 4: Instala as dependências do projeto.
      # Executa o comando 'flutter pub get' para baixar todos os pacotes listados no pubspec.yaml.
      - name: 4. Instalar dependências
        run: flutter pub get

      # Passo 5: Analisa o código em busca de erros e avisos.
      # 'flutter analyze' verifica se o código segue as melhores práticas e as regras de lint.
      # É um passo crucial para manter a qualidade do código.
      - name: 5. Analisar o código (Lint)
        run: flutter analyze

      # Passo 6: Executa os testes unitários e de widgets.
      # 'flutter test' roda todos os arquivos de teste na pasta 'test/'.
      # Garante que a lógica do aplicativo e os componentes da UI funcionem como esperado.
      - name: 6. Executar testes
        run: flutter test

      # Passo 7: Compila o aplicativo Android (APK).
      # 'flutter build apk' gera um arquivo APK de depuração.
      # Este passo confirma que o aplicativo pode ser compilado com sucesso para a plataforma Android.
      - name: 7. Compilar o APK de depuração
        run: flutter build apk --debug

      # Passo 8 (Opcional): Compila o App Bundle de produção.
      # Descomente este passo se você precisar gerar a versão de produção para a Google Play Store.
      # Nota: Para um build de produção real, você precisaria configurar o versionamento e as chaves de assinatura.
      # - name: 8. Compilar o App Bundle de produção
      #   run: flutter build appbundle --release

      # Passo 9 (Opcional): Faz o upload do APK gerado como um "artefato".
      # Isso permite que você baixe o arquivo APK diretamente da página de resultados da ação no GitHub.
      # Útil para compartilhar builds de teste com sua equipe.
      - name: 9. Fazer upload do APK como artefato
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk # O nome do artefato que será criado.
          path: build/app/outputs/flutter-apk/app-debug.apk # O caminho para o arquivo que será enviado.
